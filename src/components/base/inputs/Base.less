@import './../../../assets/styles/colors.less';
@import './../../../assets/styles/scales.less';
@import './../../../assets/styles/media.less';

/* stylelint-disable no-descending-specificity */
.BaseInput {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    width: 100%;
    height: 100%;
    position: relative;

    .input {
        width: 100%;
        height: 100%;
        padding: 1px 20px 1px 5px;
        color: #000;
        border-radius: @border-radius__input;
        font-size: 14px;
        line-height: 16px;
        border: 1px solid @color__border-input;
        cursor: pointer;
        filter: none; /* firefox autofill fix */

        &::placeholder {
            color: var(--placeholder_text_color);
            opacity: 1;
            user-select: none;
        }

        &:focus {
            outline: none;
        }

        &[type="text"] {
            padding: 1px 4px;
        }
    }

    &.transparent {
        .input {
            background-color: transparent !important;
        }
    }

    .searchIconWrapper {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 8px;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 20px;
        height: 20px;
        background: #FFF;
        pointer-events: none;

        &.filled {
            cursor: pointer;
            pointer-events: auto;
        }

        i {
            transition: none !important;
        }
    }

    .arrowsContainer {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        width: @width__arrows-container;
        height: 100%;
        border-left: 1px solid #D4DADF;
        position: absolute;
        top: 0;
        right: 0;
    }

    .arrowIcon {
        width: 100%;
        height: 100%;
        background-image: url('../../../assets/icons/input-arrow.svg');
        background-size: contain;
        background-repeat: no-repeat;
        background-position: center;
    }

    .arrowUp,
    .arrowDown {
        width: 100%;
        height: 50%;
        padding: 4px;

        @media @hover__not-touch {
            &:hover {
                cursor: pointer;
                background-color: @color__background-arrow-button;
            }
        }
    }

    .arrowUp {
        .arrowIcon {
            transform: rotate(-90deg);
        }
    }

    .arrowDown {
        .arrowIcon {
            transform: rotate(90deg);
        }
    }

    .arrowUp:hover {
        border-top-right-radius: @border-radius__input;
    }

    .arrowDown:hover {
        border-bottom-right-radius: @border-radius__input;
    }
}

.BaseInput.form {
    .input {
        width: 100%;
        height: 100%;
        cursor: pointer;
        font-size: 14px;
        font-weight: 300;
        background-color: #FFF;
        outline: none;
        color: #1E1E1E;
        border-radius: @border-radius__input;
        border: 1px solid @color__ligth-gray-border;
        padding-left: 10px;
        padding-right: 10px;

        @media @hover__not-touch {
            &:hover {
                border-color: #B3B3B3;
            }
        }
    }
}

.BaseInput.dark {
    .input {
        background: var(--input_background_color);
        color: var(--primary_text_color);
        border-color: var(--border_color_select);
        -webkit-appearance: none;

        .arrowsContainer {
            border-color: var(--border_color_select);
            transition: border-color 0.3s;
        }

        &::placeholder {
            color: var(--placeholder_text_color);
        }

        &:focus {
            border-color: var(--border_color_active_select);
            box-shadow: 0 0 2px 1px var(--box_shadow_color_select);
        }

        &:focus + .arrowsContainer {
            border-color: var(--border_color_active_select);
        }

        &:-webkit-autofill,
        &:-webkit-autofill:hover,
        &:-webkit-autofill:focus,
        &:-webkit-autofill:active {
            -webkit-text-fill-color: var(--primary_text_color) !important;
            -webkit-box-shadow: 0 0 0 30px var(--input_background_color) inset !important;
        }

        @media @hover__not-touch {
            &:hover {
                border-color: var(--border_color_hover_select);
            }

            &:hover + .arrowsContainer {
                border-color: var(--border_color_hover_select);
            }
        }
    }

    .arrowUp,
    .arrowDown {
        .arrowIcon {
            &.dark {
                background-image: url('../../../assets/icons/input-arrow.dark.svg');
            }
        }

        @media @hover__not-touch {
            &:hover {
                background-color: var(--border_color_hover_select);

                .arrowIcon {
                    &.dark {
                        background-image: url('../../../assets/icons/input-arrow.svg');
                    }
                }
            }
        }
    }
}

.BaseInput.search {
    .input {
        padding-right: 35px;
        padding-left: 12px;
        color: var(--primary_text_color);
        background: var(--primary_background_color);
        border-color: var(--primary_background_color);
        border-radius: 4px;

        @media @hover__not-touch {
            &:hover {
                border-color: var(--border_color_search);
            }
        }

        &::placeholder {
            color: var(--placeholder_text_color);
            font-weight: 300;
        }
    }

    input[placeholder] { text-overflow: ellipsis; }
    input::-moz-placeholder { text-overflow: ellipsis; }
    input:-moz-placeholder { text-overflow: ellipsis; }
    input:-ms-input-placeholder { text-overflow: ellipsis; }
}

.BaseInput.disabled {
    .input {
        background-color: var(--input_disabled_background) !important;
        color: var(--placeholder_text_color) !important;
        border-color: var(--border_color_select) !important;
        user-select: none;
        cursor: auto !important;

        @media @hover__not-touch {
            &:hover {
                border-color: var(--border_color_select) !important;
                cursor: default !important;
            }
        }

        &:focus {
            border-color: var(--border_color_select) !important;
            box-shadow: none;
        }
    }
}

.BaseInput.invalid {
    .input {
        border-color: red !important;

        &:focus,
        &:hover {
            border-color: red !important;
            box-shadow: none !important;
        }
    }

    .arrowsContainer {
        border-color: red !important;
    }
}
